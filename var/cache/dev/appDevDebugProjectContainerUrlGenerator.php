<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/mon-espace/coordonnees/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/mon-espace/coordonnees/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/market/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/market/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/mon-espace/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lsi_market_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lsi_market_coordonnees_bancaires' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\ProfileController::coordonneesBancairesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/mon-espace/coordonnees-bancaires',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'lsi_market_a_propos' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\ProfileController::aProposAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/mon-espace/a-propos',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_liste_annonce' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::listeOffresAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/offres',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_ajouter_annonce' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::ajouterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_ajouter_annonce2' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::ajouter2Action',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_voir_annonce' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::voirAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/annonce',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_plage_annonce' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::disponibiliteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/plage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_modifier_annonce' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::modifierAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_supprimer_annonce' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::supprimerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_dupliquer_annonce' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::dupliquerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/dupliquer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_tarif_annonce' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::gestiondestarifAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/tarif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_reserver_annonce' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::reserverAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/reserver',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_annonce_reservee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::annonceReserverAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/annoncereservee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_mes_reservations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::mesReservationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/mon-espace/mes-reservations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_voir_reservation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::voirReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/annonce_reservee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_valider_reservation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::validAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/valider_reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_refuser_reservation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::refuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/refuser_reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_traitement_demandeur_reservation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::reservationdemandeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/reservation_demandeur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_mon_espace' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::monEspaceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_mes_annonces' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::mesAnnoncesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/offreur/mes-annonces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_reservations_sur_mes_annonces' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::reservationsSurMesAnnoncesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/offreur/reservations-sur-mes-annonces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_commandes_sur_mes_annonces' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::commandesSurMesAnnoncesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/mairie/commandes-sur-mes-annonces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_mes_commandes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::mesCommandesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/mairie/mes-commandes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_administre_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSIMarketBundle:Espace:administreIndex',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_engagement' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSIMarketBundle:Code:nosEngagements',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/nosengagements',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_condition_generale' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::conditionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/conditions-generales',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_une_histoire_et_des_valeurs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::histoireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/histoire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_une_solution_complete' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/solution _controller:',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_aide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::aideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/aide',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_marche_public' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::marchePublicsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/marche-publics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_qui_sommes_nous' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::quiSommesNousAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/qui-sommes-nous',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_un_concept_innovant' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::conceptInnovantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/concept-innovant',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_superadmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::superAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/superadmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_liste_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::listeAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/superadmin/liste-admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_admin_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::addAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/superadmin/registration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_accueil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::indexAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monsespace/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_mon_epci' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::monEpciAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monepci',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_ajout_epci' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::ajouterEpciAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace/admin/ajoutepci',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_liste_epci' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::listeEpciAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace/admin/listeepci',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_voir_epci' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::voirEpciAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/monespace/admin/voirepci',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_modifier_epci' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::modifierEpciAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/monespace/admin/modifierepci',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_ajouter_cgu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::ajouterCguAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace/admin/ajouter-cgu',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_voir_cgu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::voirCguAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace/admin/voir-cgu',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_modifier_cgu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::modifierCguAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace/admin/modifier-cgu',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_ajouter_cgv' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::ajouterCgvAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace/admin/ajouter-cgv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_voir_cgv' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::voirCgvAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace/admin/voir-cgv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_modifier_cgv' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\AdminController::modifierCgvAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/monespace/admin/modifier-cgv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_traitement_demandeur_annulerreserv' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::annulerReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/reservation_annule',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_traitement_demandeur_modifierreserv' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::modifierReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/reservation_modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_traitement_msgrecu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::msgRecuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/messages/recus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_traitement_messagerie' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::msgEnvoyerMAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/messages/envoye',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_traitement_messageriea' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::msgEnvoyerAAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/messages/envoye/administre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_traitement_reponsemsg' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::reponsemsgAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/market/message/reponse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_traitement_msgenvoye' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::msgenvoyeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/message/msgenvoye',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_annonce_rechprincipal' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::rechPrincipaleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/recherche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_annonce_resultsearch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::resultatRechAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/resultat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_annonce_rechindex' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::rechindexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/resultatpageindex',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_annonce_rechavancee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::rechavanceeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/resultat/rechercheavancee',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_annonce_demarche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::demarcheAnnonceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/annonce/demarche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_tchat_post' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::envoiemessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/tchat/post',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ls_imarket_annonce_recente' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LSI\\MarketBundle\\Controller\\MarketController::derniereAnnonceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/market/annonce/recente',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ancarebeca_full_calendar_load' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AncaRebeca\\FullCalendarBundle\\Controller\\CalendarController::loadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/full-calendar/load',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
